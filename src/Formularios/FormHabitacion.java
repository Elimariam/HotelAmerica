/////////////////////////////////////////
// Estudiante: Elizabeth Montes de Oca
// Asignatura: Lenguaje de Programaci√≥n de la Web I
// Profesor: Julio Castillo
/////////////////////////////////////////

package Formularios;

import Conexion.ConexionSQL;
import TAD.Hotel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FormHabitacion extends javax.swing.JDialog {

    ConexionSQL con = new ConexionSQL();
    Connection conexion = con.getConexionSQL();
    PreparedStatement psInstruccion = null;
    ResultSet resultadoSetHotel, resultadoSetHabitacion;
    int administrador_id;
    int hotel_id;
    DefaultTableModel modelo = null;
    
    public FormHabitacion(java.awt.Frame parent, boolean modal, int administrador_id) {
        super(parent, modal);
        this.administrador_id = administrador_id;
        initComponents();

        // DEFINIMOS LAS ESTRUCTURA DEL COMPONENTE JTABLE
        modelo = new DefaultTableModel();
        modelo.addColumn("Id");
        modelo.addColumn("Nombre");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Capacidad");
        modelo.addColumn("Precio");
        tablaHabitacion.setModel(modelo);
        
        cargarHoteles();
        this.hotel_id = this.cmbHotel.getItemAt(this.cmbHotel.getSelectedIndex()).getId();
        cargarHabitaciones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaHabitacion = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cmbHotel = new javax.swing.JComboBox<>();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Hotel America");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("HABITACIONES");

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        tablaHabitacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaHabitacion);

        jScrollPane3.setViewportView(jScrollPane2);

        jLabel1.setText("Hotel:");

        cmbHotel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbHotelMouseClicked(evt);
            }
        });
        cmbHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbHotelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(281, 281, 281)
                                .addComponent(jLabel2))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbHotel, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 35, 35)
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 41, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 72, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEditar)
                            .addComponent(btnEliminar)
                            .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(cmbHotel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // LLAMAMOS EL FORMULARIO PARA AGREGAR UNA HABITACION
        FormAgregarHabitacion formAgregarHabitacion = new FormAgregarHabitacion(new javax.swing.JFrame(), true, hotel_id);
        formAgregarHabitacion.setVisible(true);
        cargarHabitaciones();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // LLAMAMOS AL FORMULARIO PARA EDITAR UNA HABITACION
        if (tablaHabitacion.getRowCount() > 0){
            int fila = tablaHabitacion.getSelectedRow();
            if (fila >= 0){
                // OBTENEMOS EL ID DEL HOTEL, DE LA FILA SELECCIONADA
                int hotel_id = Integer.parseInt(tablaHabitacion.getValueAt(tablaHabitacion.getSelectedRow(),0).toString());
                FormEditarHabitacion formEditarHabitacion = new FormEditarHabitacion(new javax.swing.JFrame(), true, hotel_id);
                formEditarHabitacion.setVisible(true);
                cargarHabitaciones();
            }else{
                JOptionPane.showMessageDialog(null, "Debe seleccionar un hotel.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "No existen hoteles registrados.");
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (tablaHabitacion.getRowCount() > 0){
            int fila = tablaHabitacion.getSelectedRow();
            if (fila >= 0){
                // CONFIRMAMOS CON EL USUARIO SI ELIMINA LA HABITACION
                int respuesta = JOptionPane.showConfirmDialog(null, "¬øEst√° seguro de eliminar la habitaci√≥n?", "Pregunta...",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                // Yes = 0 , No = 1 , Cancel = 2
                if (respuesta == 0){
                    // OBTENEMOS EL ID DE LA HABITACI√ìN, DE LA FILA SELECCIONADA
                    int id = Integer.parseInt(tablaHabitacion.getValueAt(tablaHabitacion.getSelectedRow(),0).toString());
                    try {
                        psInstruccion = conexion.prepareStatement("DELETE FROM tipo_habitacion WHERE id = ?");
                        psInstruccion.setInt(1, id);
                        psInstruccion.executeUpdate();
                        JOptionPane.showMessageDialog(null, "La habitai√≥n se elimino con √©xito.");
                        cargarHabitaciones();
                    }
                    catch(SQLException e) {
                        JOptionPane.showMessageDialog(null, "Error al eliminar la habitaci√≥n: "+e.getMessage());
                    }
                }
            }else{
                JOptionPane.showMessageDialog(null, "Debe seleccionar un habitaci√≥n.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "No existen habitaciones registradas.");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void cmbHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbHotelActionPerformed
        //cargarHoteles();
        this.hotel_id = this.cmbHotel.getItemAt(this.cmbHotel.getSelectedIndex()).getId();
        cargarHabitaciones();
    }//GEN-LAST:event_cmbHotelActionPerformed

    private void cmbHotelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbHotelMouseClicked
        //this.hotel_id = this.cmbHotel.getItemAt(this.cmbHotel.getSelectedIndex()).getId();        
        //cargarHabitaciones();
    }//GEN-LAST:event_cmbHotelMouseClicked

    public void cargarHoteles(){
        int id;
        String nombre;
        Hotel hotel = null;
        try {     
            // CONSULTAMOS LOS HOTELES EN LA BASE DE DATOS
            psInstruccion = conexion.prepareStatement("SELECT id, nombre FROM hotel WHERE administrador_id = ?");
            psInstruccion.setInt(1, administrador_id); 
            // Ejecutamos la instrucci√≥n SQL
            resultadoSetHotel = psInstruccion.executeQuery();
            // RECORREMOS EL RESULTSET Y COLOCAMOS LOS CAMPOS EN EL ARREGLO
            // Y LUEGO AGREGAMOS EL ARREGLO AL MODELO 
            while (resultadoSetHotel.next()){
                id = resultadoSetHotel.getInt("id");
                nombre = resultadoSetHotel.getString("nombre");
                hotel = new Hotel(id, nombre);
                // EL COMBOBOX DEBE CONFIGURARSE PARA QUE ACEPTE EL TIPO <HOTEL>
                // YA QUE POR DEFACTO VIENE PARA MANEJAR STRING.
                // VER PROPIEDADES->CODIGO->TIPO DE PAR√ÅMETROS
                cmbHotel.addItem(hotel);
                //JOptionPane.showMessageDialog(null, "cargo: "+nombre);
            }
        }catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al consultar los hoteles: "+e.getMessage());
        }
    }

    public void cargarHabitaciones(){
        try {
            modelo.setRowCount(0);
            // CONSULTAMOS LAS HABITACIONES DEL HOTEL SELECCIONADO EN LA BASE DE DATOS
            psInstruccion = conexion.prepareStatement("SELECT id, nombre, descripcion, capacidad, precio FROM tipo_habitacion WHERE hotel_id = ?");
            psInstruccion.setInt(1, hotel_id); 
            // Ejecutamos la instrucci√≥n SQL
            resultadoSetHabitacion = psInstruccion.executeQuery();
            // RECORREMOS EL RESULTSET Y COLOCAMOS LOS CAMPOS EN EL ARREGLO
            // Y LUEGO AGREGAMOS EL ARREGLO AL MODELO 
            while(resultadoSetHabitacion.next()){
                Object [] arrCampo = new Object[5]; // Hay cuatro campos en la tabla                
                // Se rellena el arreglo con los datos del ResulSet
                for (int i=0; i<5; i++){
                    arrCampo[i] = resultadoSetHabitacion.getObject ( i+1 );
                    // Se a√±ade al modelo el arreglo            
                } 
                modelo.addRow(arrCampo);
            }
        }catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al cargar las habitaciones: "+e.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                FormHabitacion dialog = new FormHabitacion(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<Hotel> cmbHotel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tablaHabitacion;
    // End of variables declaration//GEN-END:variables
}
