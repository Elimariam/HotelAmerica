/////////////////////////////////////////
// Estudiante: Elizabeth Montes de Oca
// Asignatura: Lenguaje de Programación de la Web I
// Profesor: Julio Castillo
/////////////////////////////////////////

package Formularios;

import Conexion.ConexionSQL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FormHotel extends javax.swing.JDialog {

    ConexionSQL con = new ConexionSQL();
    Connection conexion = con.getConexionSQL();
    PreparedStatement psInstruccion = null;
    ResultSet resultadoSet;
    int administrador_id;
    DefaultTableModel modelo = null;
    
    public FormHotel(java.awt.Frame parent, boolean modal, int administrador_id) {
        super(parent, modal);
        this.administrador_id = administrador_id;
        initComponents();
        
        // DEFINIMOS LAS ESTRUCTURA DEL COMPONENTE JTABLE
        modelo = new DefaultTableModel();
        modelo.addColumn("Id");
        modelo.addColumn("Nombre");
        modelo.addColumn("Categoría");
        modelo.addColumn("Teléfono");
        tablaHotel.setModel(modelo);
        
        cargarHoteles();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaHotel = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Hotel America");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("HOTELES");

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        tablaHotel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaHotel);

        jScrollPane3.setViewportView(jScrollPane2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(313, 313, 313)
                .addComponent(jLabel1)
                .addGap(44, 44, 44)
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEditar)
                        .addComponent(btnEliminar)
                        .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // LLAMAMOS A LA VENTANA PARA AGREGAR UN HOTEL
        FormAgregarHotel formAgregarHotel = new FormAgregarHotel(new javax.swing.JFrame(), true, administrador_id);
        formAgregarHotel.setVisible(true);
        cargarHoteles();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (tablaHotel.getRowCount() > 0){
            int fila = tablaHotel.getSelectedRow();
            if (fila >= 0){
                // CONFIRMAMOS CON EL USUARIO SI ELIMINA EL HOTEL
                int respuesta = JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar el hotel?", "Pregunta...",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                // Yes = 0 , No = 1 , Cancel = 2
                if (respuesta == 0){
                    // OBTENEMOS EL ID DEL HOTEL, DE LA FILA SELECCIONADA
                    int id = Integer.parseInt(tablaHotel.getValueAt(tablaHotel.getSelectedRow(),0).toString());
                    try {
                        psInstruccion = conexion.prepareStatement("DELETE FROM hotel WHERE id = ?");
                        psInstruccion.setInt(1, id);
                        psInstruccion.executeUpdate();
                        JOptionPane.showMessageDialog(null, "El hotel se elimino con éxito.");
                    }
                    catch(SQLException e) {
                        JOptionPane.showMessageDialog(null, "Error al eliminar el hotel: "+e.getMessage());
                    }                
                }
            }else{
                JOptionPane.showMessageDialog(null, "Debe seleccionar un hotel.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "No existen hoteles registrados.");            
        }        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // LLAMAMOS AL FORMULARIO PARA EDITAR UN HOTEL
        if (tablaHotel.getRowCount() > 0){
            int fila = tablaHotel.getSelectedRow();
            if (fila >= 0){
                // OBTENEMOS EL ID DEL HOTEL, DE LA FILA SELECCIONADA
                int hotel_id = Integer.parseInt(tablaHotel.getValueAt(tablaHotel.getSelectedRow(),0).toString());
                FormEditarHotel formEditarHotel = new FormEditarHotel(new javax.swing.JFrame(), true, hotel_id);
                formEditarHotel.setVisible(true);
                cargarHoteles();                
            }else{
                JOptionPane.showMessageDialog(null, "Debe seleccionar un hotel.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "No existen hoteles registrados.");            
        }        
    }//GEN-LAST:event_btnEditarActionPerformed

    public void cargarHoteles(){
        try {
            // LIMPIAMOS EL MODELO Y CON ESO SE LIMPIA EL JTABLE
            modelo.setRowCount(0);
            // CONSULTAMOS LOS HOTELES EN LA BASE DE DATOS
            psInstruccion = conexion.prepareStatement("SELECT id, nombre, categoria, telefono FROM hotel WHERE administrador_id = ?");
            psInstruccion.setInt(1, administrador_id); 
            // Ejecutamos la instrucción SQL
            resultadoSet = psInstruccion.executeQuery();
            // RECORREMOS EL RESULTSET Y COLOCAMOS LOS CAMPOS EN EL ARREGLO
            // Y LUEGO AGREGAMOS EL ARREGLO AL MODELO 
            while(resultadoSet.next()){
                Object [] arrCampo = new Object[4]; // Hay cuatro campos en la tabla                
                // Se rellena el arreglo con los datos del ResulSet
                for (int i=0; i<4; i++){
                    arrCampo[i] = resultadoSet.getObject ( i+1 );
                    // Se añade al modelo el arreglo            
                } 
                modelo.addRow(arrCampo);
            }
        }catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al consultar los hoteles: "+e.getMessage());
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                FormHotel dialog = new FormHotel(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tablaHotel;
    // End of variables declaration//GEN-END:variables
}
